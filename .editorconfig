# 相关定义:https://docs.microsoft.com/zh-cn/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019#language-code-styles
# 模板文档参考 https://gist.github.com/kuhlenh/5471666a7a2c57fea427e81cf0a41da8

#root = true

###############################
# Core EditorConfig Options   #
###############################

[*]
charset      = utf-8
end_of_line  = crlf
indent_style = space

[*.md]
charset = utf-8-bom

# Code files
[*.cs]
indent_size          = 4
insert_final_newline = true
charset              = utf-8-bom

###############################
# .NET Coding Conventions     #
###############################
[*.cs]
# Organize usings https://docs.microsoft.com/zh-cn/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019#usings
dotnet_sort_system_directives_first                        = true

# Avoid this. unless absolutely necessary https://docs.microsoft.com/zh-cn/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019#this_and_me
dotnet_style_qualification_for_field                       = false : suggestion
dotnet_style_qualification_for_property                    = false : suggestion
dotnet_style_qualification_for_method                      = false : suggestion
dotnet_style_qualification_for_event                       = false : suggestion

# Use language keywords instead of BCL types https://docs.microsoft.com/zh-cn/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019#language_keywords
dotnet_style_predefined_type_for_locals_parameters_members = true : warning
dotnet_style_predefined_type_for_member_access             = true : warning

## Parentheses preferences
#dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:none
#dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:none
#dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
#dotnet_style_parentheses_in_other_operators = never_if_unnecessary:none

# Modifier preferences https://docs.microsoft.com/zh-cn/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019#normalize_modifiers
dotnet_style_require_accessibility_modifiers               = always : warning
dotnet_style_readonly_field                                = true : warning

# Expression-level preferences https://docs.microsoft.com/zh-cn/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019#expression_level
#dotnet_style_object_initializer = true:suggestion
#dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names                          = true : warning
#dotnet_style_null_propagation = true:suggestion
#dotnet_style_coalesce_expression = true:suggestion
#dotnet_style_prefer_is_null_check_over_reference_equality_method = true:none
dotnet_prefer_inferred_tuple_names                         = true : suggestion
dotnet_prefer_inferred_anonymous_type_member_names         = true : suggestion
#dotnet_style_prefer_auto_properties = true:none
dotnet_style_prefer_conditional_expression_over_assignment = true : suggestion
dotnet_style_prefer_conditional_expression_over_return     = true : suggestion

###############################
# Naming Conventions          #
###############################
[*.cs]
# 单纯大驼峰
dotnet_naming_style.pascal_case_style.capitalization                    = pascal_case
# 单纯小驼峰
dotnet_naming_style.camel_case_style.capitalization                     = camel_case
#异步大驼峰
dotnet_naming_style.suffix_async_pascal.capitalization                  = pascal_case
dotnet_naming_style.suffix_async_pascal.required_suffix                 = Async
#异步小驼峰
dotnet_naming_style.suffix_async_camel.capitalization                   = camel_case
dotnet_naming_style.suffix_async_camel.required_suffix                  = Async

dotnet_naming_style.prefix__.capitalization                             = camel_case
dotnet_naming_style.prefix__.required_prefix                            = _

#常量字段
dotnet_naming_symbols.constant_fields.applicable_kinds                  = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities        = *
dotnet_naming_symbols.constant_fields.required_modifiers                = const
#私有方法
dotnet_naming_symbols.private_method.applicable_kinds                   = method
dotnet_naming_symbols.private_method.applicable_accessibilities         = private,protected
#私有只读字段
dotnet_naming_symbols.private_readonly_field.applicable_kinds           = field
dotnet_naming_symbols.private_readonly_field.applicable_accessibilities = private
dotnet_naming_symbols.private_readonly_field.required_modifiers         = readonly
#参数
dotnet_naming_symbols.all_parameter.applicable_kinds                    = parameter
dotnet_naming_symbols.all_parameter.applicable_accessibilities          = *
#异步方法
dotnet_naming_symbols.async_method.applicable_kinds                     = method
dotnet_naming_symbols.async_method.applicable_accessibilities           = *
dotnet_naming_symbols.async_method.required_modifiers                   = async
#私有异步方法
dotnet_naming_symbols.private_async_method.applicable_kinds             = method
dotnet_naming_symbols.private_async_method.applicable_accessibilities   = private
dotnet_naming_symbols.private_async_method.required_modifiers           = async


# Use PascalCase for constant fields
#私有异步方法>>>>异步小驼峰
dotnet_naming_rule.private_async_method_should_be_suffix_async.severity = error
dotnet_naming_rule.private_async_method_should_be_suffix_async.symbols  = private_async_method
dotnet_naming_rule.private_async_method_should_be_suffix_async.style    = suffix_async_camel
#私有方法>>>>>小驼峰
dotnet_naming_rule.private_method_should_be_pascal_case.severity        = error
dotnet_naming_rule.private_method_should_be_pascal_case.symbols         = private_method
dotnet_naming_rule.private_method_should_be_pascal_case.style           = camel_case_style
#异步方法>>>>>异步大驼峰
dotnet_naming_rule.async_method_should_be_suffix_async.severity         = error
dotnet_naming_rule.async_method_should_be_suffix_async.symbols          = async_method
dotnet_naming_rule.async_method_should_be_suffix_async.style            = suffix_async_pascal


#参数>>>>>小驼峰
dotnet_naming_rule.prarmater_should_be_pascal_case.severity             = error
dotnet_naming_rule.prarmater_should_be_pascal_case.symbols              = all_parameter
dotnet_naming_rule.prarmater_should_be_pascal_case.style                = camel_case_style
#常量字段>>>>>大驼峰
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity       = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols        = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style          = pascal_case_style



#私有只读字段>>>>>下滑线开头
dotnet_naming_rule.private_readonly_field_should_be_prefix__.severity   = error
dotnet_naming_rule.private_readonly_field_should_be_prefix__.symbols    = private_readonly_field
dotnet_naming_rule.private_readonly_field_should_be_prefix__.style      = prefix__


###############################
# C# Coding Conventions       #
###############################
[*.cs]
# Always use var
#csharp_style_var_for_built_in_types = true:suggestion
#csharp_style_var_when_type_is_apparent = true:suggestion
#csharp_style_var_elsewhere = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods    = true : suggestion
#csharp_style_expression_bodied_constructors = false:none
#csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = true : suggestion
#csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors  = true : suggestion

# Pattern matching
#csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
#csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression             = true : warning
csharp_style_conditional_delegate_call    = true : warning

# Modifier preferences
csharp_preferred_modifier_order           = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async : suggestion

# Expression-level preferences
#csharp_prefer_braces                      = true : suggestion
#csharp_style_deconstructed_variable_declaration = true:suggestion
#csharp_prefer_simple_default_expression = true:suggestion
#csharp_style_pattern_local_over_anonymous_function = true:suggestion
#csharp_style_inlined_variable_declaration = true:suggestion

###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace         = all
#csharp_new_line_before_else = true
#csharp_new_line_before_catch = true
#csharp_new_line_before_finally = true
#csharp_new_line_before_members_in_object_initializers = true
#csharp_new_line_before_members_in_anonymous_types = true
#csharp_new_line_between_query_expression_clauses = true
#
## Indentation preferences
#csharp_indent_case_contents = true
#csharp_indent_switch_labels = true
#csharp_indent_labels = flush_left
#
## Space preferences
#csharp_space_after_cast = false
#csharp_space_after_keywords_in_control_flow_statements = true
#csharp_space_between_method_call_parameter_list_parentheses = false
#csharp_space_between_method_declaration_parameter_list_parentheses = false
#csharp_space_between_parentheses = false
#
## Wrapping preferences
#csharp_preserve_single_line_statements = true
#csharp_preserve_single_line_blocks = true

